/*!
 * Barix (https://github.com/codotronix/Barix)
 * Copyright 2016 Suman Barick
 * Licensed under the MIT license
 */var Barix = function () { function e(e) { this.elems = e } return e.select = function (t) { var r = new Array; if (t && "string" == typeof t) { var s = document.querySelectorAll(t); r = e.ListToArray(s) } else { if (!(t instanceof Element)) { var i = "Barix: " + t + " is not a supported selector or Element."; throw i } r.push(t) } var n = new e(r); return n }, e.prototype.addClass = function (e) { var t, r = (e || "").trim(), s = r.split(" "); for (var i in this.elems) { t = this.elems[i]; for (var n in s) t.className.indexOf(s[n]) < 0 && (t.className += " " + s[n]); t.className = t.className.trim() } return this }, e.prototype.removeClass = function (e) { var t = (e || "").trim(); if ("" == t) { for (var r in this.elems) this.elems[r].className = ""; return this } var s, i, n = t.split(" "); for (var r in this.elems) { i = "", s = this.elems[r].className.split(" "); for (var a in s) n.indexOf(s[a]) < 0 && (i += " " + s[a]); i = i.trim(), this.elems[r].className = i } return this }, e.prototype.hasClass = function (e) { var t = (e || "").trim(); if ("" == t) return !0; var r, s = t.split(" "), i = !0; for (var n in this.elems) { r = this.elems[n]; for (var a in s) if (r.className.indexOf(s[a]) < 0) return i = !1 } return i }, e.prototype.each = function (e) { var t; for (var r in this.elems) (t = e.bind(this.elems[r]))(r, this.elems[r]); return this }, e.prototype.css = function () { for (var e = [], t = 0; t < arguments.length; t++) e[t - 0] = arguments[t]; var r, s; if (2 == e.length) s = {}, s[e[0]] = e[1]; else { if (1 != e.length) { var i = "Barix: css style can be provided as single (name,value) pair or as a json object."; throw i } s = e[0] } for (var n in this.elems) { r = this.elems[n]; for (var a in s) r.style[a] = s[a] } return this }, e.prototype.on = function () { for (var t = [], r = 0; r < arguments.length; r++) t[r - 0] = arguments[r]; var s, i, n = t[0]; if (2 == t.length) { i = t[1]; for (var a in this.elems) this.elems[a].addEventListener(n, i) } else if (3 == t.length) { s = t[1], i = t[2]; var o, l, f, h, m; for (var a in this.elems) o = this.elems[a], o.addEventListener(n, function (t) { for (l = o.querySelectorAll(s), f = e.ListToArray(l), h = t.target; h != o;) { if (f.indexOf(h) > -1) { m = i.bind(h), m(t); break } h = h.parentElement } }) } return this }, e.prototype.text = function (e) { for (var t in this.elems) this.elems[0].textContent = e; return this }, e.prototype.appendText = function (e) { for (var t in this.elems) this.elems[0].textContent += e; return this }, e.prototype.html = function (e) { for (var t in this.elems) this.elems[0].innerHTML = e; return this }, e.prototype.append = function (e) { for (var t in this.elems) this.elems[0].innerHTML += e; return this }, e.ListToArray = function (e) { for (var t = [], r = 0; r < e.length; r++) t.push(e[r]); return t }, e }(), bx = Barix.select;